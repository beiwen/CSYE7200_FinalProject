{"paragraphs":[{"text":"%spark2.spark\n\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.{Dataset, SparkSession}\n\nval schema: StructType = new StructType(Array(StructField(\"date\", StringType, false),\n    StructField(\"game_size\", IntegerType, false),\n    StructField(\"match_id\",StringType, false),\n    StructField(\"match_mode\", StringType, false),\n    StructField(\"party_size\", IntegerType, false),\n    StructField(\"player_assists\", IntegerType, false),\n    StructField(\"player_dbno\",IntegerType,false),\n    StructField(\"player_dist_ride\",DoubleType,false),\n    StructField(\"player_dist_walk\",DoubleType,false),\n    StructField(\"player_dmg\",IntegerType,false),\n    StructField(\"player_kills\",IntegerType,false),\n    StructField(\"player_name\",StringType,false),\n    StructField(\"player_survive_time\",DoubleType,false),\n    StructField(\"team_id\",IntegerType,false),\n    StructField(\"team_placement\",IntegerType,false))\n  )\n\ncase class Player (game_size: Int, match_id: String, match_mode: String, party_size: Int,\n                   player_assists: Int, player_dbno: Int, player_dist_ride: Double, player_dist_walk: Double,\n                   player_dmg: Int, player_kills: Int, player_name: String, player_survive_time: Double,\n                   team_id: Int, team_placement: Int)\n                   \ndef ingest(spark: SparkSession, srcDir: String, schema: StructType): Dataset[Player]  = {\n\n    import spark.implicits._\n\n    spark.read\n      .option(\"header\", \"true\")\n      .option(\"inferSchema\", \"false\")\n      .schema(schema)\n      .format(\"csv\")\n      .load(srcDir)\n      .as[Player]\n  }\n\nval path = \"s3a://csye7200.bucket.forfinal/aggregate/*\"\n\nval ds = ingest(spark, path, schema)","dateUpdated":"2018-04-18T03:42:15+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.sql.types._\n\nimport org.apache.spark.sql.{Dataset, SparkSession}\n\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(date,StringType,false), StructField(game_size,IntegerType,false), StructField(match_id,StringType,false), StructField(match_mode,StringType,false), StructField(party_size,IntegerType,false), StructField(player_assists,IntegerType,false), StructField(player_dbno,IntegerType,false), StructField(player_dist_ride,DoubleType,false), StructField(player_dist_walk,DoubleType,false), StructField(player_dmg,IntegerType,false), StructField(player_kills,IntegerType,false), StructField(player_name,StringType,false), StructField(player_survive_time,DoubleType,false), StructField(team_id,IntegerType,false), StructField(team_placement,IntegerType,false))\n\ndefined class Player\n\ningest: (spark: org.apache.spark.sql.SparkSession, srcDir: String, schema: org.apache.spark.sql.types.StructType)org.apache.spark.sql.Dataset[Player]\n\npath: String = s3a://csye7200.bucket.forfinal/aggregate/*\n\nds: org.apache.spark.sql.Dataset[Player] = [date: string, game_size: int ... 13 more fields]\n"}]},"apps":[],"jobName":"paragraph_1524015043283_275884814","id":"20180417-182913_1481718175","dateCreated":"2018-04-18T01:30:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:371","user":"admin","dateFinished":"2018-04-18T03:42:16+0000","dateStarted":"2018-04-18T03:42:15+0000"},{"text":"%spark2.spark\nimport org.apache.spark.ml.classification.{MultilayerPerceptronClassificationModel, MultilayerPerceptronClassifier}\n\nval soloModel = MultilayerPerceptronClassificationModel.load(\"s3a://csye7200.bucket.forfinal/Models/nnClassifierForSolo\")\nval duoModel = MultilayerPerceptronClassificationModel.load(\"s3a://csye7200.bucket.forfinal/Models/nnClassifierForDuo\")\nval squadModel = MultilayerPerceptronClassificationModel.load(\"s3a://csye7200.bucket.forfinal/Models/nnClassifierForSquad\")","dateUpdated":"2018-04-18T03:42:19+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.classification.{MultilayerPerceptronClassificationModel, MultilayerPerceptronClassifier}\n\nsoloModel: org.apache.spark.ml.classification.MultilayerPerceptronClassificationModel = mlpc_636918f932fa\n\nduoModel: org.apache.spark.ml.classification.MultilayerPerceptronClassificationModel = mlpc_a510660defc5\n\nsquadModel: org.apache.spark.ml.classification.MultilayerPerceptronClassificationModel = mlpc_bb3751b27e98\n"}]},"apps":[],"jobName":"paragraph_1524015043283_275884814","id":"20180417-182920_504523805","dateCreated":"2018-04-18T01:30:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:372","user":"admin","dateFinished":"2018-04-18T03:42:25+0000","dateStarted":"2018-04-18T03:42:19+0000"},{"text":"%spark2.spark\ndef filtPlayers(ds: Dataset[Player]): Dataset[Player] = {\n    //We need to filter abnormal data. Some players have \"0\" as team_placement, which do not affect clustering but obviously affect classification.\n    val filterdPlayers = ds.filter(d => (d.player_dist_ride != 0 || d.player_dist_walk != 0)\n      && d.player_survive_time <= 2400\n      && d.team_placement > 0)\n    filterdPlayers\n}\n  \nval soloPlayers = filtPlayers(ds.filter(d => d.party_size == 1)).cache()\nval duoPlayers = filtPlayers(ds.filter(d => d.party_size == 2)).cache()\nval squadPlayers = filtPlayers(ds.filter(d => d.party_size == 4)).cache()\n","dateUpdated":"2018-04-18T03:42:27+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfiltPlayers: (ds: org.apache.spark.sql.Dataset[Player])org.apache.spark.sql.Dataset[Player]\n\nsoloPlayers: org.apache.spark.sql.Dataset[Player] = [date: string, game_size: int ... 13 more fields]\n\nduoPlayers: org.apache.spark.sql.Dataset[Player] = [date: string, game_size: int ... 13 more fields]\n\nsquadPlayers: org.apache.spark.sql.Dataset[Player] = [date: string, game_size: int ... 13 more fields]\n"}]},"apps":[],"jobName":"paragraph_1524015043284_273961070","id":"20180417-183128_1492762491","dateCreated":"2018-04-18T01:30:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:373","user":"admin","dateFinished":"2018-04-18T03:42:27+0000","dateStarted":"2018-04-18T03:42:27+0000"},{"text":"%spark2.spark\nimport org.apache.spark.ml.classification.MultilayerPerceptronClassifier\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.ml.feature.{Normalizer, VectorAssembler}\nimport org.apache.spark.sql.{DataFrame, Dataset}\nimport org.apache.spark.sql.functions.udf\n\ndef createDfWithFeature(ds: Dataset[Player]): DataFrame ={\n    val isWinnerUdf = udf((placement: Int) => placement match {\n      case 1 => 1\n      case _ => 0\n    })\n    val colArray = Array(\"player_assists\", \"player_dbno\", \"player_dist_ride\", \"player_dist_walk\", \"player_dmg\", \"player_kills\", \"player_survive_time\")\n    val vecAss = new VectorAssembler().setInputCols(colArray).setOutputCol(\"feature_unnormalized\")\n    val normalizer = new Normalizer().setInputCol(\"feature_unnormalized\").setOutputCol(\"features\")\n    val df_temp_1 = vecAss.transform(ds)\n    val df_temp_2 = normalizer.transform(df_temp_1)\n    val resultDf = df_temp_2.withColumn(\"survived\", isWinnerUdf(df_temp_2(\"team_placement\")))\n    resultDf\n  }","dateUpdated":"2018-04-18T03:42:30+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.classification.MultilayerPerceptronClassifier\n\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\n\nimport org.apache.spark.ml.feature.{Normalizer, VectorAssembler}\n\nimport org.apache.spark.sql.{DataFrame, Dataset}\n\nimport org.apache.spark.sql.functions.udf\n\ncreateDfWithFeature: (ds: org.apache.spark.sql.Dataset[Player])org.apache.spark.sql.DataFrame\n"}]},"apps":[],"jobName":"paragraph_1524015043284_273961070","id":"20180417-183437_2042848039","dateCreated":"2018-04-18T01:30:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:374","user":"admin","dateFinished":"2018-04-18T03:42:31+0000","dateStarted":"2018-04-18T03:42:30+0000"},{"text":"%spark2.spark\n\nval soloInput = createDfWithFeature(soloPlayers)\nval duoInput = createDfWithFeature(duoPlayers)\nval squadInput = createDfWithFeature(squadPlayers)","dateUpdated":"2018-04-18T03:42:38+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsoloInput: org.apache.spark.sql.DataFrame = [date: string, game_size: int ... 16 more fields]\n\nduoInput: org.apache.spark.sql.DataFrame = [date: string, game_size: int ... 16 more fields]\n\nsquadInput: org.apache.spark.sql.DataFrame = [date: string, game_size: int ... 16 more fields]\n"}]},"apps":[],"jobName":"paragraph_1524015043284_273961070","id":"20180417-183537_230339025","dateCreated":"2018-04-18T01:30:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:375","user":"admin","dateFinished":"2018-04-18T03:42:38+0000","dateStarted":"2018-04-18T03:42:38+0000"},{"text":"%spark2.spark\nval soloResult = soloModel.transform(soloInput).cache\nval duoResult = duoModel.transform(duoInput).cache\nval squadResult = squadModel.transform(squadInput)cache\n\nsoloResult.createOrReplaceTempView(\"soloView\")\nduoResult.createOrReplaceTempView(\"duoView\")\nsquadResult.createOrReplaceTempView(\"squadView\")","dateUpdated":"2018-04-18T03:42:44+0000","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsoloResult: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [date: string, game_size: int ... 17 more fields]\n\nduoResult: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [date: string, game_size: int ... 17 more fields]\n\nwarning: there was one feature warning; re-run with -feature for details\n\nsquadResult: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [date: string, game_size: int ... 17 more fields]\n"}]},"apps":[],"jobName":"paragraph_1524015043285_273576321","id":"20180417-183749_1372076899","dateCreated":"2018-04-18T01:30:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:376","user":"admin","dateFinished":"2018-04-18T03:42:45+0000","dateStarted":"2018-04-18T03:42:44+0000"},{"text":"%spark2.spark\nduoResult.where(\"survived == 1 and prediction == 1\").count","user":"admin","dateUpdated":"2018-04-18T04:30:07+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524022968255_1774401273","id":"20180418-034248_838095182","dateCreated":"2018-04-18T03:42:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1902","dateFinished":"2018-04-18T04:36:00+0000","dateStarted":"2018-04-18T04:30:07+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres46: Long = 1110\n"}]}},{"text":"%spark2.sql\n\nSELECT prediction, SUM(1) AS numEachCluster FROM soloView GROUP BY prediction","dateUpdated":"2018-04-18T01:30:43+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"prediction\tnumEachCluster\n0.0\t13571015\n1.0\t2704\n"}]},"apps":[],"jobName":"paragraph_1524015043285_273576321","id":"20180417-183918_1960265372","dateCreated":"2018-04-18T01:30:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:377"},{"text":"%spark2.sql\n\nSELECT survived, SUM(1) AS numEachCluster FROM soloView GROUP BY survived","dateUpdated":"2018-04-18T01:30:43+0000","config":{"editorSetting":{"language":"sql"},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"survived\tnumEachCluster\n1\t152503\n0\t13421216\n"}]},"apps":[],"jobName":"paragraph_1524015043285_273576321","id":"20180417-192318_1582843333","dateCreated":"2018-04-18T01:30:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:378"},{"text":"%spark2.sql\nSELECT prediction, SUM(1) AS numEachCluster FROM duoView GROUP BY prediction","dateUpdated":"2018-04-18T01:30:43+0000","config":{"editorSetting":{"language":"sql"},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"prediction\tnumEachCluster\n0.0\t21185863\n1.0\t2133\n"}]},"apps":[],"jobName":"paragraph_1524015043286_274730568","id":"20180417-185328_345331628","dateCreated":"2018-04-18T01:30:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:379"},{"text":"%spark2.sql\nSELECT survived, SUM(1) AS numEachCluster FROM duoView GROUP BY survived","dateUpdated":"2018-04-18T01:30:43+0000","config":{"editorSetting":{"language":"sql"},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"survived\tnumEachCluster\n1\t462950\n0\t20725046\n"}]},"apps":[],"jobName":"paragraph_1524015043286_274730568","id":"20180417-192709_179338286","dateCreated":"2018-04-18T01:30:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:380"},{"text":"%spark2.sql\nSELECT prediction, SUM(1) AS numEachCluster FROM squadView GROUP BY prediction","dateUpdated":"2018-04-18T01:30:43+0000","config":{"editorSetting":{"language":"sql"},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"prediction\tnumEachCluster\n0.0\t31084752\n"}]},"apps":[],"jobName":"paragraph_1524015043286_274730568","id":"20180417-192756_1380053249","dateCreated":"2018-04-18T01:30:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:381"},{"text":"%spark2.sql\nSELECT survived, SUM(1) AS numEachCluster FROM squadView GROUP BY survived","dateUpdated":"2018-04-18T01:30:43+0000","config":{"editorSetting":{"language":"sql"},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"survived\tnumEachCluster\n1\t1273008\n0\t29811744\n"}]},"apps":[],"jobName":"paragraph_1524015043287_274345819","id":"20180417-192749_588975474","dateCreated":"2018-04-18T01:30:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:382"},{"text":"%spark2.sql\n","dateUpdated":"2018-04-18T01:30:43+0000","config":{"editorSetting":{"language":"sql"},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1524015043287_274345819","id":"20180417-193359_246882375","dateCreated":"2018-04-18T01:30:43+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:383"}],"name":"/csye7200/Visualization","id":"2DCG9BHRH","angularObjects":{"2DDRGA5ES:shared_process":[],"2DE8S1Y5S:shared_process":[],"2DB7MX7WV:shared_process":[],"2DDUNF2Y8:shared_process":[],"2DCHKC9SP:shared_process":[],"2DAG48VFX:shared_process":[],"2C4U48MY3_spark2:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}